{"version":3,"file":"index.es.js","sources":["../src/helpers/log.ts","../src/helpers/merge.ts","../src/helpers/resolveDependency.ts","../src/modules/performance.ts","../src/modules/storefront-ui.ts","../src/modules/raw-sources-loader.ts","../src/helpers/isProduction.ts","../src/index.ts"],"sourcesContent":["import consola from 'consola';\nimport chalk from 'chalk';\nimport { Log } from '../types';\n\nconst log: Log = Object.freeze({\n  info: (message) => consola.info(chalk.bold('VSF'), message),\n  success: (message) => consola.success(chalk.bold('VSF'), message),\n  warning: (message) => consola.warn(chalk.bold('VSF'), message),\n  error: (message) => consola.error(chalk.bold('VSF'), message)\n});\n\nexport default log;\n","import { mergeWith, isArray } from 'lodash';\n\nexport default (source, destination) => mergeWith(source, destination, (objValue, srcValue) => {\n  if (isArray(objValue)) {\n    return objValue.concat(srcValue);\n  }\n});\n","export default function resolveDependency(name: string): string {\n  try {\n    return require.resolve(name, { paths: [process.cwd()] });\n  } catch (error) {\n    return '';\n  }\n}\n","import { merge } from 'lodash';\nimport { ModuleOptions, PurgeCSSOptions } from '../types';\n\nfunction pushScripts(): void {\n  this.options.render = merge(this.options.render, {\n    http2: {\n      push: true,\n      pushAssets: (request, response, publicPath, preloadFiles) => {\n        return preloadFiles\n          .filter(({ asType }) => asType === 'script')\n          .map(({ file, asType }) => `<${publicPath}${file}>; rel=preload; as=${asType}`);\n      }\n    }\n  });\n}\n\nfunction loadPurgeCss(options: PurgeCSSOptions): void {\n  // PurgeCSS module should be installed after all other modules\n  this.nuxt.hook('modules:done', moduleContainer => moduleContainer.addModule(['nuxt-purgecss', options]));\n}\n\nexport default function VueStorefrontPerformanceModule(options: ModuleOptions): void {\n  const { httpPush, purgeCSS } = options.performance;\n\n  if (httpPush) {\n    pushScripts.call(this);\n  }\n\n  if (purgeCSS && purgeCSS.enabled) {\n    loadPurgeCss.call(this, purgeCSS);\n  }\n}\n","import merge from '../helpers/merge';\nimport { ModuleOptions } from '../types';\n\n// TODO: Create a separate nuxt module for storefront ui\nfunction loadStorefrontRawSources(options: ModuleOptions): void {\n  const rawSources = [\n    '@storefront-ui/vue',\n    '@storefront-ui/shared'\n  ];\n\n  options.useRawSource = merge(options.useRawSource, {\n    dev: rawSources,\n    prod: rawSources\n  });\n}\n\nexport default function VueStorefrontPerformanceModule(options: ModuleOptions): void {\n  loadStorefrontRawSources.call(this, options);\n}\n","import log from '../helpers/log';\nimport isProduction from '../helpers/isProduction';\nimport resolveDependency from '../helpers/resolveDependency';\nimport { ModuleOptions } from '../types';\n\nexport default function VueStorefrontPerformanceModule(options: ModuleOptions): void {\n  const useRawSource = (pckg) => {\n    const pkgPath = resolveDependency(`${pckg}/package.json`);\n    // eslint-disable-next-line global-require\n    const pkg = require(pkgPath || '');\n\n    if (pkg.module) {\n      this.extendBuild(config => {\n        config.resolve.alias[pkg.name + '$'] = resolveDependency(`${pckg}/${pkg.module}`);\n      });\n    }\n\n    this.options.build.transpile.push(pckg);\n    log.info(`Using raw source/ESM for ${pkg.name}`);\n  };\n\n  options.useRawSource[isProduction(options) ? 'prod' : 'dev'].map(pckg => useRawSource(pckg));\n}\n","import { ModuleOptions } from '../types';\n\nexport default (options: ModuleOptions): boolean => process.env.NODE_ENV === 'production' || options.coreDevelopment;\n","// TODO proper bundling, for now it's just to experiment with nuxt modules api\nimport fs from 'fs';\nimport path from 'path';\nimport log from './helpers/log';\nimport merge from './helpers/merge';\nimport resolveDependency from './helpers/resolveDependency';\nimport performanceModule from './modules/performance';\nimport storefrontUiModule from './modules/storefront-ui';\nimport rawSourcesModule from './modules/raw-sources-loader';\nimport { ModuleOptions } from './types';\n\nexport { default as meta } from '../package.json';\n\n/**\n * VueStorefrontNuxtModule\n * @param moduleOptions\n */\nexport default function VueStorefrontNuxtModule(moduleOptions: ModuleOptions) {\n  const defaultOptions = {\n    coreDevelopment: false,\n    i18nExtension: true,\n    e2e: true,\n    logger: true,\n    ssr: true,\n    context: true,\n    sfui: true,\n    performance: {\n      httpPush: true,\n      purgeCSS: {\n        enabled: false,\n        paths: ['**/*.vue']\n      }\n    },\n    useRawSource: {\n      dev: [],\n      prod: []\n    }\n  };\n\n  const options = merge(defaultOptions, moduleOptions);\n\n  // Add meta data\n  this.options.head.meta.push({\n    name: 'generator',\n    content: 'Vue Storefront 2'\n  });\n\n  log.info('Starting Vue Storefront Nuxt Module');\n\n  // Enable HTTP/2 push for JS files\n  if (options.performance.httpPush) {\n    this.options.render = merge(this.options.render, {\n      http2: {\n        push: true,\n        pushAssets: (request, response, publicPath, preloadFiles) => {\n          return preloadFiles\n            .filter(({ asType }) => asType === 'script')\n            .map(({ file, asType }) => `<${publicPath}${file}>; rel=preload; as=${asType}`);\n        }\n      }\n    });\n  }\n  if (options.context) {\n    // Context plugin\n    this.addPlugin(path.resolve(__dirname, '../plugins/context.js'));\n    log.success('Installed Vue Storefront Context plugin');\n  }\n  if (options.ssr) {\n    // SSR plugin\n    this.addPlugin(path.resolve(__dirname, '../plugins/ssr.js'));\n    log.success('Installed Vue Storefront SSR plugin');\n  }\n\n  if (options.logger) {\n    // Logger plugin\n    this.addPlugin({\n      src: path.resolve(__dirname, '../plugins/logger.js'),\n      options: moduleOptions.logger || {}\n    });\n    log.success('Installed VSF Logger plugin');\n  }\n\n  if (options.e2e) {\n    // Context plugin\n    this.addPlugin(path.resolve(__dirname, '../plugins/e2e-testing.js'));\n    log.success('Installed Vue Storefront E2E testing plugin');\n  }\n\n  // i18n-cookies plugin\n  if (options.i18nExtension) {\n    this.addPlugin({\n      src: path.resolve(__dirname, '../plugins/i18n-cookies.js'),\n      options: this.options.i18n\n    });\n    log.success('Installed Internationalization Cookies plugin');\n  }\n\n  // StorefrontUI module\n  if (fs.existsSync(resolveDependency('@storefront-ui/vue')) && options.sfui) {\n    storefrontUiModule.call(this, options);\n    log.success('Installed StorefrontUI Module');\n  }\n\n  // Performance module\n  performanceModule.call(this, options);\n  log.success('Installed Performance Module');\n\n  // Raw sources loader\n  rawSourcesModule.call(this, options);\n}\n"],"names":["log","Object","freeze","info","message","consola","chalk","bold","success","warning","warn","error","source","destination","mergeWith","objValue","srcValue","isArray","concat","resolveDependency","name","require","resolve","paths","process","cwd","pushScripts","this","options","render","merge","http2","push","pushAssets","request","response","publicPath","preloadFiles","filter","_a","map","file","asType","loadPurgeCss","nuxt","hook","moduleContainer","addModule","VueStorefrontPerformanceModule","performance","httpPush","purgeCSS","call","enabled","loadStorefrontRawSources","rawSources","useRawSource","dev","prod","env","NODE_ENV","coreDevelopment","isProduction","pckg","pkgPath","pkg","module","_this","extendBuild","config","alias","build","transpile","VueStorefrontNuxtModule","moduleOptions","i18nExtension","e2e","logger","ssr","context","sfui","head","meta","content","addPlugin","path","__dirname","src","i18n","fs","existsSync","storefrontUiModule","performanceModule","rawSourcesModule"],"mappings":"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"}