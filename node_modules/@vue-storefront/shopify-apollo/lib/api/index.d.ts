import { searchProduct } from './searchProduct';
import customerRecover from './customerRecover';
import customerCreate from './customerCreate';
import availableFilters from './availableFilters';
import getCollection from './getCollection';
import { getPage } from './getPage';
import { getBlogs } from './getBlogs';
import { getBlog } from './getBlog';
import { getArticles } from './getArticles';
import { getArticle } from './getArticle';
import { availableCountries } from './availableCountries';
declare const apis: {
    searchProduct: typeof searchProduct;
    customerRecover: typeof customerRecover;
    customerCreate: typeof customerCreate;
    availableFilters: typeof availableFilters;
    getCollection: typeof getCollection;
    getPage: typeof getPage;
    getBlogs: typeof getBlogs;
    getBlog: typeof getBlog;
    getArticles: typeof getArticles;
    getArticle: typeof getArticle;
    availableCountries: typeof availableCountries;
};
export declare type ShopifyApolloAPIs = {
    [T in keyof typeof apis]: (typeof apis)[T] extends (x: any, ...args: infer P) => infer R ? (...args: P) => R : never;
};
export declare function getShopifyApolloAPIs(): ShopifyApolloAPIs;
export {};
